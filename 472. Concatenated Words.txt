*472. Concatenated Words

Solution : 

class Solution {
    public List<String> findAllConcatenatedWordsInADict(String[] words) {
        ArrayList<String> res = new ArrayList();
        
        HashSet<String> wordDict = new HashSet();
        for(String word : words) {
            wordDict.add(word);
        }
        
        for(String word : words) {
            wordDict.remove(word);
            if(bottomUp(word, wordDict))
                res.add(word);
            wordDict.add(word);
        }
        
        return res;
    }
    
    public boolean topDown(String s, HashSet<String> wordDict, int start, Boolean[] memo) {
        // base case
        if(start == s.length()) return true;
        
        if(memo[start] != null)
            return memo[start];
        
        for(int end = start + 1; end <= s.length(); end++) {
            if(wordDict.contains(s.substring(start, end)) && topDown(s, wordDict, end, memo)) {
                memo[start] = true;
                return true;
            }
        }
        
        memo[start] = false;
        return false;
    }
    
    public boolean bottomUp(String s, HashSet<String> wordDict) {
        boolean[] dp = new boolean[s.length() + 1];
        dp[0] = true;
        
        for(int i = 1; i <= s.length(); i++) {
            for(int j = 0; j < i; j++) {
                if(dp[j] && wordDict.contains(s.substring(j, i))) {
                    dp[i] = true;
                    break;
                }
            }
        }
        
        return dp[s.length()];
    }
}