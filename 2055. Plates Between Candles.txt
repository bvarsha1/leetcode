*2055. Plates Between Candles

Solution :

class Solution {
    public int[] platesBetweenCandles(String s, int[][] queries) {
        int n = s.length();
        char[] sArr = s.toCharArray();
        
        int[] prevCandle = new int[n];
        int[] nextCandle = new int[n];
        int[] prefixSum = new int[n];
        for(int i = 0; i < n; i++) {
            prevCandle[i] = (sArr[i] == '*') ? ((i == 0) ? prevCandle[i] : prevCandle[i-1]) : i;
            nextCandle[n-i-1] = (sArr[n-i-1] == '*') ? ((i == 0) ? nextCandle[n-i-1] : nextCandle[n-i]) : n-i-1;

            prefixSum[i] = (i == 0) ? ((sArr[i] == '*') ? 1 : 0) : prefixSum[i-1] + ((sArr[i] == '*') ? 1 : 0);
        }
        
        int[] res = new int[queries.length];
        int i = 0;
        for(int[] query : queries) {

            int start = nextCandle[query[0]] > query[1] ? 0 : nextCandle[query[0]];
            int end = prevCandle[query[1]] < query[0] ? 0 : prevCandle[query[1]];

            res[i++] = prefixSum[end] - prefixSum[start];
        }
        
        
        return res;
    }
}