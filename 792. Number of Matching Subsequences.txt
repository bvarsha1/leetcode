*792. Number of Matching Subsequences

Solution : 

class Solution {
    public int numMatchingSubseq(String s, String[] words) {
        int ans = 0;
        ArrayList<Node>[] heads = new ArrayList[26];
        for (int i = 0; i < 26; ++i)
            heads[i] = new ArrayList<Node>();

        for (String word: words)
            heads[word.charAt(0) - 'a'].add(new Node(word, 0));
        
        // for each of the characters in the string
        for(char ch : s.toCharArray()) {
            // check which words have that character
            ArrayList<Node> curr = heads[ch - 'a'];
            // remove all items from that character
            heads[ch - 'a'] = new ArrayList<Node>();
            
            // for each word in the curr bucket
            for(Node node : curr) {
                node.index++;
                if(node.index == node.word.length())
                    ans++;
                else
                    heads[node.word.charAt(node.index) - 'a'].add(node);
            }
            
            // clear memory
            curr.clear();
        }
        
        return ans;
    }
}

class Node {
    String word;
    int index;
    public Node(String w, int i) {
        word = w;
        index = i;
    }
}