// 2231. Largest Number After Digit Swaps by Parity

class Solution {
    public int largestInteger(int num) {
        String numStr = String.valueOf(num);
        PriorityQueue<Integer> even = new PriorityQueue<>((a, b) -> Integer.compare(b, a));
        PriorityQueue<Integer> odd = new PriorityQueue<>((a, b) -> Integer.compare(b, a));

        for(char ch : numStr.toCharArray()) {
            int d = ch - '0';
            if(d % 2 == 0)
                even.offer(d);
            else
                odd.offer(d);
        }

        char[] res = new char[numStr.length()];
        for(int i = 0; i < numStr.length(); i++) {
            int d = numStr.charAt(i) - '0';
            if(d % 2 == 0)
                res[i] = (char) (even.poll() + '0');
            else
                res[i] = (char) (odd.poll() + '0');
        }

        return Integer.parseInt(String.valueOf(res));
    }
}