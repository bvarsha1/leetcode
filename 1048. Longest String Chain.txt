*1048. Longest String Chain

Solution :

class Solution {
    HashSet<String> exists = new HashSet();
    HashMap<String, Integer> memo = new HashMap();
    public int longestStrChain(String[] words) {
        if(words.length <= 1) return words.length;
        Collections.addAll(exists, words);

        int ans = 0;
        for(String word : words) {
            ans = Math.max(ans, dfs(word));
        }
        
        return ans;
    }

    public int dfs(String word) {
        if(memo.containsKey(word)) return memo.get(word);
        
        int max = 1;
        StringBuilder sb = new StringBuilder(word);
        
        for(int i = 0; i < word.length(); i++) {
            sb.deleteCharAt(i);
            String newWord = sb.toString();
            
            if(exists.contains(newWord)) {
                max = Math.max(max, 1 + dfs(newWord));
            }
            sb.insert(i, word.charAt(i));
        }
        memo.put(word, max);
        
        return max;
    }
}