// 1048. Longest String Chain

class Solution {
    HashSet<String> exists = new HashSet<>();
    HashMap<String, Integer> memo = new HashMap<>();
    public int longestStrChain(String[] words) {
        Collections.addAll(exists, words);

        int ans = 0;
        for(int i = 0; i < words.length; i++)
            ans = Math.max(ans, dfs(words[i]));

        return ans;
    }

    public int dfs(String word) {
        if(memo.containsKey(word)) return memo.get(word);

        int max = 1;
        for(int i = 0; i < word.length(); i++) {
            StringBuilder sb = new StringBuilder(word);
            sb.deleteCharAt(i);
            String newWord = sb.toString();

            if(exists.contains(newWord)) {
                max = Math.max(max, dfs(newWord) + 1);
            }
        }

        memo.put(word, max);

        return max;
    }
}