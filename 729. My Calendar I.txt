*729. My Calendar I

Solution : 

class MyCalendar {
    TreeMap<Integer, Integer> orderedMap;
    
    public MyCalendar() {
        orderedMap = new TreeMap();
    }
    
    public boolean book(int start, int end) {
        // we add end to key and start to value, as we need ordering or sorting by end
        // then compare the start given with the end values
        
        // we search the closest end time, larger than start
        Integer key = orderedMap.ceilingKey(start);
        if(key != null) {
            // if the given end is greater than(equal wont count) the current key's start - then there is an overlap
            if(end > orderedMap.get(key))
                return false;
        }
        
        // we put end - 1 as the end is not inclusive
        orderedMap.put(end - 1, start);
        return true;
    }
}

/**
 * Your MyCalendar object will be instantiated and called as such:
 * MyCalendar obj = new MyCalendar();
 * boolean param_1 = obj.book(start,end);
 */